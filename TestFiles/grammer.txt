expression -> equality;
comma -> ternary ("," ternary)?
ternary -> equality ("?" expression ":" ternary)?; // This allows nested
equality -> comparison (("!=" | "==") comparison )*;
comparison -> term (("<" | ">" | "<=" | ">=") term)*; 
term -> factor (("+" | "-") factor)*;
factor -> unary (("*" | "\") unary)*;
unary -> ("-" | "!" ) unary | primary;
primary -> NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")"; 
