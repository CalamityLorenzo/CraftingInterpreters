program         -> declaration* EOF;
declaration     -> varDecl | statement;
varDecl         -> "var" IDENTIFIER ("=" expression)? ";" ;
statement       -> exprStmt 
                | forStmt
                | ifStmt
                | printStmt
                | whileStmt
                | block;                
exprStmt        -> expression ";" ;
forStmt         -> "for" "(" (varDecl| exprStmt | ";") 
                   expression? ";" 
                   expression? ")" statement;       
ifStmt          -> "if" "(" expression ")" statement
                   ( "else" statement)? ;
whileStmt       -> "while" "(" expression ")" statement ;

block           -> "{"  declaration* "}";
printStmt       -> "print" expression ";" ;
expression      -> assignment;
assignment      -> IDENTIFIER "=" assignment | conditional;
conditional     -> logic_or ("?" expr ":" (conditional)*)?
logic_or        -> logic_and ( "or"  logic_and)*;
logic_and       -> equality ( "and" equality )*;
equality        -> comparison (("!=" | "==") comparison )*;
comparison      -> term (("<" | ">" | "<=" | ">=") term)*; 
term            -> factor (("+" | "-") factor)*;
factor          -> unary (("*" | "\") unary)*;
unary           -> ("-" | "!" ) unary | primary;
primary         -> NUMBER 
                | STRING 
                | "true" 
                | "false" 
                | "nil" 
                | "(" expression ")"
                | IDENTIFIER; 
